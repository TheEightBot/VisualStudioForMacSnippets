<?xml version="1.0" encoding="utf-8"?>
<CodeTemplates version="3.0">
  <CodeTemplate version="2.0">
    <Header>
      <_Group>C#</_Group>
      <Version />
      <MimeType>text/x-csharp</MimeType>
      <Shortcut>iosui</Shortcut>
      <_Description>Creates a ViewControllerBase implementation</_Description>
      <TemplateType>Unknown</TemplateType>
    </Header>
    <Variables>
      <Variable name="ViewController">
        <Default>notset</Default>
      </Variable>
    </Variables>
    <Code><![CDATA[public class $ViewController$ : ViewControllerBase<ViewModels.$ViewController$>
    {
//using System;
//using System.Linq;
//using System.Reactive;
//using System.Reactive.Linq;
//using EightBot.BigBang.Extensions;
//using EightBot.BigBang.iOS.ViewControllers;
//using ReactiveUI;
        public $ViewController$()
        {
            ViewModel = new ViewModels.$ViewController$();
        } 

        protected override void SetupUserInterface()
        {
           
        }

        protected override void BindControls()
        {
            this.OneWayBind(ViewModel, x => x.Title, c => c.Title)
                .DisposeWith(ControlBindings);

            Observable
                .Merge(
                    this.WhenAnyValue(x => x.ViewModel).IsNotNull().Select(_ => Unit.Default),
                    this.WhenAnyObservable(x => x.Activated).Skip(1))
                .SelectUnit()
                .InvokeCommand(this, x => x.ViewModel.InitializeData)
                .DisposeWith(ControlBindings);  
        }
    }]]></Code>
  </CodeTemplate>
</CodeTemplates>